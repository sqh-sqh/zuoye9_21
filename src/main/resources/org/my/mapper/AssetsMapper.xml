<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.my.dao.AssetsMapper">

<!--    新增-->
    <insert id="add">
        INSERT INTO goods (code ,format ,measure,quantity,price,putTime) VALUES (#{gs.code}, #{gs.format}, #{gs.measure}, #{gs.quantity}, #{gs.price}, #{gs.putTime})
    </insert>

<!--    查询（内联方式）-->
    <select id="list" resultType="org.my.dto.AssetsDto">
        SELECT * FROM (select t1.assetsId,t2.assetsCall,t1.financeId,t3.code,t1.user,t1.mode
        from assets t1,sort t2,goods t3
        where t1.goodId = t3.goodId
        and t1.classId = t2.classId) t0 <include refid="utilSql"></include>
    </select>
<!--    计数（内联方式）-->
    <select id="listCount" resultType="java.lang.Integer">
        SELECT count(*) FROM (select t1.assetsId,t2.assetsCall,t1.financeId,t3.code,t1.user,t1.mode
        from assets t1,sort t2,goods t3
        where t1.goodId = t3.goodId
        and t1.classId = t2.classId) t0 <include refid="utilSql"></include>
    </select>
<!--    修改-->
    <update id="save">
        UPDATE assets SET classId=#{assetsDto.classId}, financeId=#{assetsDto.financeId}, goodId=#{assetsDto.goodId}, user=#{assetsDto.user},mode=#{assetsDto.mode} WHERE assetsId = #{assetsDto.assetsId}
    </update>

<!--    删除-->
<!--    <delete id="del">-->
<!--        DELETE FROM goods WHERE goodId IN (-->
<!--        <foreach collection="ids" item="goodId" separator=",">-->
<!--            #{goodId}-->
<!--        </foreach>-->
<!--        )-->
<!--    </delete>-->

<!--    动态SQL（查询）-->
    <sql id="utilSql">
        <where>
            <if test="assetsCall != null and assetsCall != ''">
                AND t0.assetsCall LIKE CONCAT('%', #{assetsCall}, '%')
            </if>
            <if test="user != null and user != ''">
                AND t0.user LIKE CONCAT('%', #{user}, '%')
            </if>
        </where>
    </sql>

<!--    联表查询-->
<!--    <select id="get" resultType="org.my.dto.AssetsDto">-->
<!--        SELECT t1.assetsId,t2.assetsCall,t1.financeId,t1.goodId,t1.user,t1.mode FROM assets t1 INNER JOIN sort t2 ON t1.classId = t2.classId-->
<!--    </select>-->

<!--    <resultMap id="getResultMap" type="org.my.dto.AssetsDto">-->
<!--        <result column="classId" property="ss.assetsCall"></result>-->
<!--    </resultMap>-->
</mapper>